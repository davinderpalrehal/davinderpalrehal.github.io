!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver((e=>{for(const r of e)if("childList"===r.type)for(const e of r.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&n(e)})).observe(document,{childList:!0,subtree:!0})}function n(e){if(e.ep)return;e.ep=!0;const n=function(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerpolicy&&(n.referrerPolicy=e.referrerpolicy),"use-credentials"===e.crossorigin?n.credentials="include":"anonymous"===e.crossorigin?n.credentials="omit":n.credentials="same-origin",n}(e);fetch(e.href,n)}}();var e="/assets/logo.5cbc22f4.png";document.querySelector("#navigation").innerHTML='\n<header>\n    <nav>\n        <ul class="nav">\n            <li><a href="#" data-project="/">Home</a></li>\n        </ul>\n    </nav>\n    <h1 id="davi-logo"><img src="" alt="Davinderpal\'s face"></h1>\n    </header>\n',n();function n(){const n=window.location.pathname,r=document.querySelector("#page-content");switch(n){case"/colors":r&&(r.innerHTML="<h1>Colors Project</h1>");break;default:if(r){r.innerHTML='\n    <section class="container">\n        <h1>Full Stack Software Engineer</h1>\n        <p class="subtitle">Hi, I\'m <em>Davinderpal</em>,</p>\n        <p>A Full Stack Software engineer from <a href="#">Nairobi</a>, <a href="#">Kenya</a>. Currently working at <a href="#">KOKO Networks</a> as a <a href="#">Team Lead</a> and <a href="#">Senior Engineer</a>.</p>\n        <p>Most recently, I am trying to sharpen my <a href="#">TypeScript</a> skills so you will find some basic projects below.</p>        \n    </section>\n';const n=document.querySelector("#davi-logo img");n&&(n.src=e),console.log(e)}}}document.querySelectorAll(".nav a").forEach((e=>{e.addEventListener("click",(e=>{e.preventDefault();const r=e.target;r&&(document.title=`Davinderpal | ${r.innerText}`,history.pushState({project:r.dataset.project},r.innerText,r.dataset.project),n())}))}));
